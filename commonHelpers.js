import{a as b,s as v,i as n}from"./assets/vendor-33018bce.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))c(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&c(a)}).observe(document,{childList:!0,subtree:!0});function r(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function c(o){if(o.ep)return;o.ep=!0;const s=r(o);fetch(o.href,s)}})();const C=function(e){return e.map(({views:t,comments:r,downloads:c,likes:o,webformatURL:s,tags:a,largeImageURL:g})=>`<li>
        <div class="img-box">
        <a href="${g}">
        <img class="img" src="${s}" alt="${a}" width="360" height="200">
        </a>
        <ul class="value-list">
        <li class="likes value-item"><p class="article">Likes</p><p class="value">${o}</p></li>
        <li class="views value-item" ><p class="article">Views</p><p class="value">${t}</p></li>
        <li class="comments value-item"><p class="article">Comments</p><p class="value">${r}</p></li>
        <li class="downloads value-item"><p class="article">Downloads</p><p class="value">${c}</p></li>
        </ul></div>
        </li>`).join("")},w="https://pixabay.com/api/",L="43500562-b59296b97b4360198cb07a703";async function m(e,t){const{data:r}=await b(`${w}`,{params:{key:L,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:t}});return r}const O=document.querySelector(".search-form"),S=document.querySelector("input"),f=document.querySelector(".object-list"),l=document.querySelector(".loader-box"),u=document.querySelector(".load-more-btn"),$=new v(".gallery a",{caption:!0,captionsData:"alt",captionDelay:250,showCounter:!1});O.addEventListener("submit",q);u.addEventListener("click",x);let i=1,d,p;function q(e){if(e.preventDefault(),!S.value)return n.error({message:"Sorry, there are no images matching your search query. Please try again!",backgroundColor:"red",closeOnClick:!0,position:"topCenter"});f.textContent="",l.style.display="flex",p=e.currentTarget.elements.search.value.trim(),i=1,m(p,i).then(t=>{if(!t.total)return l.style.display="none",u.style.display="none",n.info({message:"Don't found",closeOnClick:!0,position:"topCenter"});y(t.hits),e.target.reset(),l.style.display="none",u.style.display="block",h(t)}).catch(t=>(l.style.display="none",n.error({message:`${t.message}`,backgroundColor:"red",position:"topCenter"})))}async function x(){l.style.display="flex",i=i+1,await m(p,i).then(e=>{y(e.hits);const t=document.querySelector("li"),{height:r}=t.getBoundingClientRect();k(r*2,0),l.style.display="none",d=Math.floor(e.totalHits/15),i>=d&&(h(e),n.show({titleColor:"white",message:"We're sorry, but you've reached the end of search results!",messageColor:"black",color:"blue",position:"topCenter",timeout:"5000"}))}).catch(e=>(l.style.display="none",n.error({message:`${e.message}`,backgroundColor:"red",position:"topCenter"})))}function y(e){f.insertAdjacentHTML("beforeend",C(e)),$.refresh()}function k(e=0,t=0){window.scrollBy({top:e,left:t,behavior:"smooth"})}function h(e){Math.round(e.totalHits/i)<=15&&(u.style.display="none")}
//# sourceMappingURL=commonHelpers.js.map
